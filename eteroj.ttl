# Copyright (c) 2016 Hanspeter Portner (dev@open-music-kontrollers.ch)
#
# This is free software: you can redistribute it and/or modify
# it under the terms of the Artistic License 2.0 as published by
# The Perl Foundation.
#
# This source is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# Artistic License 2.0 for more details.
#
# You should have received a copy of the Artistic License 2.0
# along the source as a COPYING file. If not, obtain it from
# http://www.perlfoundation.org/artistic_license_2_0.

@prefix owl:			<http://www.w3.org/2002/07/owl#> .
@prefix foaf:			<http://xmlns.com/foaf/0.1/> .
@prefix doap:			<http://usefulinc.com/ns/doap#> .
@prefix rdf:			<http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: 		<http://www.w3.org/2000/01/rdf-schema#> .
@prefix lv2:			<http://lv2plug.in/ns/lv2core#> .
@prefix work:			<http://lv2plug.in/ns/ext/worker#> .
@prefix atom:			<http://lv2plug.in/ns/ext/atom#> .
@prefix midi:			<http://lv2plug.in/ns/ext/midi#> .
@prefix time:			<http://lv2plug.in/ns/ext/time#> .
@prefix state:		<http://lv2plug.in/ns/ext/state#> .
@prefix log:			<http://lv2plug.in/ns/ext/log#> .
@prefix patch:		<http://lv2plug.in/ns/ext/patch#> .
@prefix urid:			<http://lv2plug.in/ns/ext/urid#> .
@prefix rsz:			<http://lv2plug.in/ns/ext/resize-port#> .
@prefix xsd:			<http://www.w3.org/2001/XMLSchema#> .

@prefix lic:			<http://opensource.org/licenses/> .
@prefix omk:			<http://open-music-kontrollers.ch/ventosus#> .
@prefix proj:			<http://open-music-kontrollers.ch/lv2/> .
@prefix eteroj:		<http://open-music-kontrollers.ch/lv2/eteroj#> .
@prefix osc:			<http://open-music-kontrollers.ch/lv2/osc#> .

osc:schedule
	a lv2:Feature .

osc:Event
	a rdfs:Class ;
	rdfs:subClassOf atom:Object ;
	rdfs:label "OSC Event (Bundle or Message)" .

# Maintainer
omk:me
	a foaf:Person ;
	foaf:name "Hanspeter Portner" ;
	foaf:mbox <mailto:dev@open-music-kontrollers.ch> ;
	foaf:homepage <http://open-music-kontrollers.ch> .

# Project
proj:eteroj
	a doap:Project ;
	doap:maintainer omk:me ;
	doap:name "Eteroj OSC Bundle" .

eteroj:url
	a lv2:Parameter ;
	rdfs:label "Url" ;
	rdfs:comment "eg. osc.udp://localhost:9090, osc.tcp://[::1]:4040" ;
	rdfs:range atom:String .
eteroj:connected
	a lv2:Parameter ;
	rdfs:label "Connected" ;
	rdfs:comment "shows connection status" ;
	rdfs:range atom:Bool .

# IO Plugin
eteroj:io
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Eteroj IO" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:eteroj ;
	lv2:requiredFeature urid:map, urid:unmap, work:schedule , state:loadDefaultState ;
	lv2:optionalFeature lv2:isLive , lv2:hardRTCapable, state:threadSafeRestore ;
	lv2:extensionData work:interface, state:interface ;

	lv2:port [
		# sink event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		atom:supports osc:Event ;
		atom:supports patch:Message ;
		lv2:index 0 ;
		lv2:symbol "osc_in" ;
		lv2:name "OSC Input" ;
		lv2:designation lv2:control ;
	] , [
		# source event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		atom:supports osc:Event ;
		atom:supports patch:Message ;
		lv2:index 1 ;
		lv2:symbol "osc_out" ;
		lv2:name "OSC Output" ;
		lv2:designation lv2:control ;
	] ;

	# parameters
	patch:writable
		eteroj:url ;
	patch:readable
		eteroj:connected ;

	# default state
	state:state [
		eteroj:url "osc.udp://localhost:9090" ;
	] .

# Disk Plugin
eteroj:disk_record
	a lv2:Parameter ;
	rdfs:label "Record" ;
	rdfs:comment "toggle whether to record or not" ;
	rdfs:range atom:Bool .

eteroj:disk_path
	a lv2:Parameter ;
	rdfs:label "File path" ;
	rdfs:comment "file path to store recordings to" ;
	rdfs:range atom:Path .

eteroj:disk
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Eteroj Disk" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:eteroj ;
	lv2:requiredFeature urid:map, urid:unmap, work:schedule, state:loadDefaultState, state:makePath ;
	lv2:optionalFeature lv2:isLive , lv2:hardRTCapable, state:threadSafeRestore ;
	lv2:extensionData state:interface, work:interface ;

	lv2:port [
		# sink event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports time:Position ;
		atom:supports atom:Object ;
		atom:supports osc:Event ;
		atom:supports patch:Message ;
		lv2:index 0 ;
		lv2:symbol "osc_in" ;
		lv2:name "OSC Input" ;
		lv2:designation lv2:control ;
	] , [
		# source event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		atom:supports osc:Event ;
		atom:supports patch:Message ;
		lv2:index 1 ;
		lv2:symbol "osc_out" ;
		lv2:name "OSC Output" ;
		lv2:designation lv2:control ;
	] ;
 
	patch:writable
		eteroj:disk_record ;
	patch:readable
		eteroj:disk_path ;

	state:state [
		eteroj:disk_record false ;
	] .

eteroj:query_refresh
	a lv2:Parameter ;
	rdfs:label "Refresh Introspection" ;
	rdfs:comment "click to refresh introspection" ;
	rdfs:range atom:Bool .

# Query Plugin
eteroj:query
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Eteroj Query" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:eteroj ;
	lv2:requiredFeature urid:map, urid:unmap, state:loadDefaultState ;
	lv2:optionalFeature lv2:isLive , lv2:hardRTCapable, state:threadSafeRestore ;
	lv2:extensionData state:interface ;

	lv2:port [
		# sink event port
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		atom:supports osc:Event ;
		atom:supports patch:Message ;
		lv2:index 0 ;
		lv2:symbol "osc_in" ;
		lv2:name "OSC Input" ;
		lv2:designation lv2:control ;
		rsz:minimumSize 65536 ;
	] , [
		# source event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		atom:supports osc:Event ;
		atom:supports patch:Message ;
		lv2:index 1 ;
		lv2:symbol "osc_out" ;
		lv2:name "OSC Output" ;
		lv2:designation lv2:control ;
		rsz:minimumSize 65536 ;
	] ;

	patch:writable
		eteroj:query_refresh ;

	state:state [
		eteroj:query_refresh false ;
	] .

# (De)Cloak Plugin
eteroj:cloak
	a lv2:Plugin,
		lv2:ConverterPlugin;
	doap:name "Eteroj (De)Cloak" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:eteroj ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable ;
	lv2:requiredFeature urid:map, urid:unmap ;

	# input event port
	lv2:port [
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		atom:supports osc:Event ;
		atom:supports midi:MidiEvent ;
		lv2:index 0 ;
		lv2:symbol "event_int" ;
		lv2:name "Event Input" ;
		lv2:designation lv2:control ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		atom:supports osc:Event ;
		atom:supports midi:MidiEvent ;
		lv2:index 1 ;
		lv2:symbol "event_out" ;
		lv2:name "Event Output" ;
		lv2:designation lv2:control ;
	] .

eteroj:pack_path
	a lv2:Parameter ;
	rdfs:label "Path" ;
	rdfs:comment "OSC path to be used, e.g. /midi" ;
	rdfs:range atom:String .
eteroj:pack_format
	a lv2:Parameter ;
	rdfs:label "Format" ;
	rdfs:comment "OSC Argument format to be used for MIDI payload" ;
	rdfs:range atom:Int ;
	lv2:minimum 0 ;
	lv2:maximum 2 ;
	lv2:scalePoint [ rdfs:label "(m)idi" ; rdf:value 0 ] ;
	lv2:scalePoint [ rdfs:label "(b)lob" ; rdf:value 1 ] .

# (Un)Pack Plugin
eteroj:pack
	a lv2:Plugin,
		lv2:ConverterPlugin;
	doap:name "Eteroj (Un)Pack" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:eteroj ;
	lv2:requiredFeature urid:map, urid:unmap, state:loadDefaultState ;
	lv2:optionalFeature lv2:isLive , lv2:hardRTCapable, state:threadSafeRestore ;
	lv2:extensionData state:interface ;

	# input event port
	lv2:port [
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		atom:supports osc:Event ;
		atom:supports midi:MidiEvent ;
		atom:supports patch:Message ;
		lv2:index 0 ;
		lv2:symbol "event_in" ;
		lv2:name "Event Input" ;
		lv2:designation lv2:control ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports atom:Object ;
		atom:supports osc:Event ;
		atom:supports midi:MidiEvent ;
		atom:supports patch:Message ;
		lv2:index 1 ;
		lv2:symbol "event_out" ;
		lv2:name "Event Output" ;
		lv2:designation lv2:control ;
	] ;

	# parameters
	patch:writable
		eteroj:pack_path ,
		eteroj:pack_format;

	# default state
	state:state [
		eteroj:pack_path "/midi" ;
		eteroj:pack_format 0 ;
	] .

eteroj:ninja_synchronous
	a lv2:Parameter ;
	rdfs:range atom:Bool ;
	rdfs:comment "toggle to run (a)synchronously" ;
	rdfs:label "Synchronous" .
	
# Ninja Plugin
eteroj:ninja
	a lv2:Plugin,
		lv2:ConverterPlugin;
	doap:name "Eteroj Ninja" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:eteroj ;
	lv2:requiredFeature urid:map, urid:unmap, work:schedule, state:loadDefaultState ;
	lv2:optionalFeature lv2:isLive, lv2:hardRTCapable, state:threadSafeRestore ;
	lv2:extensionData state:interface, work:interface ;

	# input event port
	lv2:port [
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports osc:Event ,
			patch:Message ;
		lv2:index 0 ;
		lv2:symbol "event_in" ;
		lv2:name "Event Input" ;
		lv2:designation lv2:control ;
	] , [
	# output event port
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports osc:Event ,
			patch:Message ;
		lv2:index 1 ;
		lv2:symbol "event_out" ;
		lv2:name "Event Output" ;
		lv2:designation lv2:control ;
	] ;

	patch:writable
		eteroj:ninja_synchronous ;

	state:state [
		eteroj:ninja_synchronous false
	] .

eteroj:control_learn_1
	a lv2:Parameter ;
	rdfs:range atom:Bool ;
	rdfs:comment "toggle whether to learn or not" ;
	rdfs:label "Learn 1" .
eteroj:control_learn_2
	a lv2:Parameter ;
	rdfs:range atom:Bool ;
	rdfs:comment "toggle whether to learn or not" ;
	rdfs:label "Learn 2" .
eteroj:control_learn_3
	a lv2:Parameter ;
	rdfs:range atom:Bool ;
	rdfs:comment "toggle whether to learn or not" ;
	rdfs:label "Learn 3" .
eteroj:control_learn_4
	a lv2:Parameter ;
	rdfs:range atom:Bool ;
	rdfs:comment "toggle whether to learn or not" ;
	rdfs:label "Learn 4" .
eteroj:control_learn_5
	a lv2:Parameter ;
	rdfs:range atom:Bool ;
	rdfs:comment "toggle whether to learn or not" ;
	rdfs:label "Learn 5" .
eteroj:control_learn_6
	a lv2:Parameter ;
	rdfs:range atom:Bool ;
	rdfs:comment "toggle whether to learn or not" ;
	rdfs:label "Learn 6" .
eteroj:control_learn_7
	a lv2:Parameter ;
	rdfs:range atom:Bool ;
	rdfs:comment "toggle whether to learn or not" ;
	rdfs:label "Learn 7" .
eteroj:control_learn_8
	a lv2:Parameter ;
	rdfs:range atom:Bool ;
	rdfs:comment "toggle whether to learn or not" ;
	rdfs:label "Learn 8" .

eteroj:control_path_1
	a lv2:Parameter ;
	rdfs:range atom:String ;
	rdfs:comment "learnt or manually set OSC path" ;
	rdfs:label "Path 1" .
eteroj:control_path_2
	a lv2:Parameter ;
	rdfs:range atom:String ;
	rdfs:comment "learnt or manually set OSC path" ;
	rdfs:label "Path 2" .
eteroj:control_path_3
	a lv2:Parameter ;
	rdfs:range atom:String ;
	rdfs:comment "learnt or manually set OSC path" ;
	rdfs:label "Path 3" .
eteroj:control_path_4
	a lv2:Parameter ;
	rdfs:range atom:String ;
	rdfs:comment "learnt or manually set OSC path" ;
	rdfs:label "Path 4" .
eteroj:control_path_5
	a lv2:Parameter ;
	rdfs:range atom:String ;
	rdfs:comment "learnt or manually set OSC path" ;
	rdfs:label "Path 5" .
eteroj:control_path_6
	a lv2:Parameter ;
	rdfs:range atom:String ;
	rdfs:comment "learnt or manually set OSC path" ;
	rdfs:label "Path 6" .
eteroj:control_path_7
	a lv2:Parameter ;
	rdfs:range atom:String ;
	rdfs:comment "learnt or manually set OSC path" ;
	rdfs:label "Path 7" .
eteroj:control_path_8
	a lv2:Parameter ;
	rdfs:range atom:String ;
	rdfs:comment "learnt or manually set OSC path" ;
	rdfs:label "Path 8" .

eteroj:control_min_1
	a lv2:Parameter ;
	rdfs:range atom:Double ;
	rdfs:label "Minimum 1" ;
	rdfs:comment "learnt or manually set minimum value" ;
	lv2:minimum 0.0 ;
	lv2:maximum 127.0 .
eteroj:control_min_2
	a lv2:Parameter ;
	rdfs:range atom:Double ;
	rdfs:label "Minimum 2" ;
	rdfs:comment "learnt or manually set minimum value" ;
	lv2:minimum 0.0 ;
	lv2:maximum 127.0 .
eteroj:control_min_3
	a lv2:Parameter ;
	rdfs:range atom:Double ;
	rdfs:label "Minimum 3" ;
	rdfs:comment "learnt or manually set minimum value" ;
	lv2:minimum 0.0 ;
	lv2:maximum 127.0 .
eteroj:control_min_4
	a lv2:Parameter ;
	rdfs:range atom:Double ;
	rdfs:label "Minimum 4" ;
	rdfs:comment "learnt or manually set minimum value" ;
	lv2:minimum 0.0 ;
	lv2:maximum 127.0 .
eteroj:control_min_5
	a lv2:Parameter ;
	rdfs:range atom:Double ;
	rdfs:label "Minimum 5" ;
	rdfs:comment "learnt or manually set minimum value" ;
	lv2:minimum 0.0 ;
	lv2:maximum 127.0 .
eteroj:control_min_6
	a lv2:Parameter ;
	rdfs:range atom:Double ;
	rdfs:label "Minimum 6" ;
	rdfs:comment "learnt or manually set minimum value" ;
	lv2:minimum 0.0 ;
	lv2:maximum 127.0 .
eteroj:control_min_7
	a lv2:Parameter ;
	rdfs:range atom:Double ;
	rdfs:label "Minimum 7" ;
	rdfs:comment "learnt or manually set minimum value" ;
	lv2:minimum 0.0 ;
	lv2:maximum 127.0 .
eteroj:control_min_8
	a lv2:Parameter ;
	rdfs:range atom:Double ;
	rdfs:label "Minimum 8" ;
	rdfs:comment "learnt or manually set minimum value" ;
	lv2:minimum 0.0 ;
	lv2:maximum 127.0 .

eteroj:control_max_1
	a lv2:Parameter ;
	rdfs:range atom:Double ;
	rdfs:label "Maximum 1" ;
	rdfs:comment "learnt or manually set maximum value" ;
	lv2:minimum 0.0 ;
	lv2:maximum 127.0 .
eteroj:control_max_2
	a lv2:Parameter ;
	rdfs:range atom:Double ;
	rdfs:label "Maximum 2" ;
	rdfs:comment "learnt or manually set maximum value" ;
	lv2:minimum 0.0 ;
	lv2:maximum 127.0 .
eteroj:control_max_3
	a lv2:Parameter ;
	rdfs:range atom:Double ;
	rdfs:label "Maximum 3" ;
	rdfs:comment "learnt or manually set maximum value" ;
	lv2:minimum 0.0 ;
	lv2:maximum 127.0 .
eteroj:control_max_4
	a lv2:Parameter ;
	rdfs:range atom:Double ;
	rdfs:label "Maximum 4" ;
	rdfs:comment "learnt or manually set maximum value" ;
	lv2:minimum 0.0 ;
	lv2:maximum 127.0 .
eteroj:control_max_5
	a lv2:Parameter ;
	rdfs:range atom:Double ;
	rdfs:label "Maximum 5" ;
	rdfs:comment "learnt or manually set maximum value" ;
	lv2:minimum 0.0 ;
	lv2:maximum 127.0 .
eteroj:control_max_6
	a lv2:Parameter ;
	rdfs:range atom:Double ;
	rdfs:label "Maximum 6" ;
	rdfs:comment "learnt or manually set maximum value" ;
	lv2:minimum 0.0 ;
	lv2:maximum 127.0 .
eteroj:control_max_7
	a lv2:Parameter ;
	rdfs:range atom:Double ;
	rdfs:label "Maximum 7" ;
	rdfs:comment "learnt or manually set maximum value" ;
	lv2:minimum 0.0 ;
	lv2:maximum 127.0 .
eteroj:control_max_8
	a lv2:Parameter ;
	rdfs:range atom:Double ;
	rdfs:label "Maximum 8" ;
	rdfs:comment "learnt or manually set maximum value" ;
	lv2:minimum 0.0 ;
	lv2:maximum 127.0 .

# ControlPlugin
eteroj:control
	a lv2:Plugin ,
		lv2:ConverterPlugin ;
	doap:name "Eteroj Control" ;
	doap:license lic:Artistic-2.0 ;
	lv2:project proj:eteroj ;
	lv2:requiredFeature urid:map, state:loadDefaultState ;
	lv2:optionalFeature lv2:isLive , lv2:hardRTCapable, state:threadSafeRestore ;
	lv2:extensionData state:interface ;

	lv2:port [
		# atom_in
	  a lv2:InputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports midi:MidiEvent, patch:Message	;
		lv2:index 0 ;
		lv2:symbol "event_in" ;
		lv2:name "Event In" ;
		lv2:designation lv2:control ;
	] , [
		# atom_in
	  a lv2:OutputPort ,
			atom:AtomPort ;
		atom:bufferType atom:Sequence ;
		atom:supports patch:Message ;
		lv2:index 1 ;
		lv2:symbol "notify" ;
		lv2:name "Notify" ;
	] , [
		# output
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 2 ;
		lv2:symbol "output_1" ;
		lv2:name "Output 1" ;
		lv2:default 0.0 ;
		lv2:minimum 0.0 ;
		lv2:maximum 1.0 ;
	] , [
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 3 ;
		lv2:symbol "output_2" ;
		lv2:name "Output 2" ;
		lv2:default 0.0 ;
		lv2:minimum 0.0 ;
		lv2:maximum 1.0 ;
	] , [
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 4 ;
		lv2:symbol "output_3" ;
		lv2:name "Output 3" ;
		lv2:default 0.0 ;
		lv2:minimum 0.0 ;
		lv2:maximum 1.0 ;
	] , [
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 5 ;
		lv2:symbol "output_4" ;
		lv2:name "Output 4" ;
		lv2:default 0.0 ;
		lv2:minimum 0.0 ;
		lv2:maximum 1.0 ;
	] , [
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 6 ;
		lv2:symbol "output_5" ;
		lv2:name "Output 5" ;
		lv2:default 0.0 ;
		lv2:minimum 0.0 ;
		lv2:maximum 1.0 ;
	] , [
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 7 ;
		lv2:symbol "output_6" ;
		lv2:name "Output 6" ;
		lv2:default 0.0 ;
		lv2:minimum 0.0 ;
		lv2:maximum 1.0 ;
	] , [
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 8 ;
		lv2:symbol "output_7" ;
		lv2:name "Output 7" ;
		lv2:default 0.0 ;
		lv2:minimum 0.0 ;
		lv2:maximum 1.0 ;
	] , [
	  a lv2:OutputPort ,
			lv2:ControlPort ;
		lv2:index 9 ;
		lv2:symbol "output_8" ;
		lv2:name "Output 8" ;
		lv2:default 0.0 ;
		lv2:minimum 0.0 ;
		lv2:maximum 1.0 ;
	] ;

	patch:writable
		eteroj:control_learn_1 ,
		eteroj:control_learn_2 ,
		eteroj:control_learn_3 ,
		eteroj:control_learn_4 ,
		eteroj:control_learn_5 ,
		eteroj:control_learn_6 ,
		eteroj:control_learn_7 ,
		eteroj:control_learn_8 ,

		eteroj:control_path_1 ,
		eteroj:control_path_2 ,
		eteroj:control_path_3 ,
		eteroj:control_path_4 ,
		eteroj:control_path_5 ,
		eteroj:control_path_6 ,
		eteroj:control_path_7 ,
		eteroj:control_path_7 ,
		eteroj:control_path_8 ,

		eteroj:control_min_1 ,
		eteroj:control_min_2 ,
		eteroj:control_min_3 ,
		eteroj:control_min_4 ,
		eteroj:control_min_5 ,
		eteroj:control_min_6 ,
		eteroj:control_min_7 ,
		eteroj:control_min_7 ,
		eteroj:control_min_8 ,

		eteroj:control_max_1 ,
		eteroj:control_max_2 ,
		eteroj:control_max_3 ,
		eteroj:control_max_4 ,
		eteroj:control_max_5 ,
		eteroj:control_max_6 ,
		eteroj:control_max_7 ,
		eteroj:control_max_7 ,
		eteroj:control_max_8 ;

	state:state [
		eteroj:control_learn_1 false ;
		eteroj:control_learn_2 false ;
		eteroj:control_learn_3 false ;
		eteroj:control_learn_4 false ;
		eteroj:control_learn_5 false ;
		eteroj:control_learn_6 false ;
		eteroj:control_learn_7 false ;
		eteroj:control_learn_8 false ;

		eteroj:control_path_1 "/control/1" ;
		eteroj:control_path_2 "/control/2" ;
		eteroj:control_path_3 "/control/3" ;
		eteroj:control_path_4 "/control/4" ;
		eteroj:control_path_5 "/control/5" ;
		eteroj:control_path_6 "/control/6" ;
		eteroj:control_path_7 "/control/7" ;
		eteroj:control_path_8 "/control/8" ;

		eteroj:control_min_1 "0.0e0"^^xsd:double ;
		eteroj:control_min_2 "0.0e0"^^xsd:double ;
		eteroj:control_min_3 "0.0e0"^^xsd:double ;
		eteroj:control_min_4 "0.0e0"^^xsd:double ;
		eteroj:control_min_5 "0.0e0"^^xsd:double ;
		eteroj:control_min_6 "0.0e0"^^xsd:double ;
		eteroj:control_min_7 "0.0e0"^^xsd:double ;
		eteroj:control_min_8 "0.0e0"^^xsd:double ;

		eteroj:control_max_1 "127.0e0"^^xsd:double ;
		eteroj:control_max_2 "127.0e0"^^xsd:double ;
		eteroj:control_max_3 "127.0e0"^^xsd:double ;
		eteroj:control_max_4 "127.0e0"^^xsd:double ;
		eteroj:control_max_5 "127.0e0"^^xsd:double ;
		eteroj:control_max_6 "127.0e0"^^xsd:double ;
		eteroj:control_max_7 "127.0e0"^^xsd:double ;
		eteroj:control_max_8 "127.0e0"^^xsd:double ;
	] .
